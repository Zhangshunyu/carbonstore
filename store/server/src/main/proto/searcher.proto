/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.apache.carbondata.store.protocol";
option java_outer_classname = "SearchService";
option objc_class_prefix = "WRK";

package protocol;

// The service definition.
service Worker {
    rpc echo (EchoRequest) returns (EchoResponse) {}
    rpc search (SearchRequest) returns (SearchResult) {}
}

message EchoRequest {
    string message = 1;
}
message EchoResponse {
    string message = 1;
}

// The request message from master to worker to search data in files
message SearchRequest {

    // a UUID id generated by master
    int32 queryId = 1;

    // serialization of CarbonInputSplit object
    repeated bytes splits = 2;

    // serialization of TableInfo object
    bytes tableInfo = 3;

    // sequence of projection column names
    repeated string projectColumns = 4;

    // serialization of Expression object
    bytes filterExpression = 5;
}

// The response message from master to worker for search request
message SearchResult {

    // query id carried in request
    int32 queryId = 1;

    enum Status {
        SUCCESS = 0;
        FAILURE = 1;
    }

    // indicate whether success or not
    Status status = 2;

    // failure message
    string message = 3;

    // sequence of search result (row)
    repeated bytes row = 4;
}
